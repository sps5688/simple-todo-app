{"version":3,"sources":["components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js"],"names":["TodoItem","props","todo","completed","id","title","useEffect","alert","className","type","checked","onChange","handleChangeProps","onClick","deleteTodoProps","style","fontStyle","color","opacity","textDecoration","TodosList","todos","map","key","Header","isInitialMount","useRef","bgColor","Math","floor","random","current","document","getElementById","innerHTML","backgroundColor","headerSpan","padding","lineHeight","fontSize","marginBottom","InputTodo","useState","inputText","setInputText","onSubmit","e","preventDefault","addTodoProps","placeholder","value","name","target","TodoContainer","setTodos","show","setShow","axios","get","then","response","data","newTodo","uuid","filter","ReactDOM","render"],"mappings":"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","file":"static/js/main.47631eb6.chunk.js","sourcesContent":["// import React from \"react\";\r\n\r\n// class TodoItem extends React.Component {\r\n//   componentWillUnmount() {\r\n//     alert(\"Item about to be deleted!\");\r\n//   }\r\n\r\n//   render() {\r\n//     const completedStyle = {\r\n//       fontStyle: \"italic\",\r\n//       color: \"#d35e0f\",\r\n//       opacity: 0.4,\r\n//       textDecoration: \"line-through\",\r\n//     };\r\n\r\n//     const { completed, id, title } = this.props.todo;\r\n\r\n//     return (\r\n//       <li className=\"todo-item\">\r\n//         <input\r\n//           type=\"checkbox\"\r\n//           checked={completed}\r\n//           onChange={() => this.props.handleChangeProps(id)}\r\n//         />\r\n//         <button onClick={() => this.props.deleteTodoProps(id)}>Delete</button>\r\n//         <span style={completed ? completedStyle : null}>{title}</span>\r\n//       </li>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default TodoItem;\r\n\r\nimport React, { useEffect } from \"react\";\r\n\r\nconst TodoItem = (props) => {\r\n  const completedStyle = {\r\n    fontStyle: \"italic\",\r\n    color: \"#d35e0f\",\r\n    opacity: 0.4,\r\n    textDecoration: \"line-through\",\r\n  };\r\n\r\n  const { completed, id, title } = props.todo;\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      alert(\"Item about to be deleted!\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <li className=\"todo-item\">\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={completed}\r\n        onChange={() => props.handleChangeProps(id)}\r\n      />\r\n      <button onClick={() => props.deleteTodoProps(id)}>Delete</button>\r\n      <span style={completed ? completedStyle : null}>{title}</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","// import React from \"react\";\r\n// import TodoItem from \"./TodoItem\";\r\n\r\n// class TodoList extends React.Component {\r\n//   render() {\r\n//     return (\r\n//       <React.Fragment>\r\n//         {this.props.todos.map((todo) => (\r\n//           <TodoItem\r\n//             key={todo.id}\r\n//             todo={todo}\r\n//             handleChangeProps={this.props.handleChangeProps}\r\n//             deleteTodoProps={this.props.deleteTodoProps}\r\n//           />\r\n//         ))}\r\n//       </React.Fragment>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default TodoList;\r\n\r\nimport React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst TodosList = (props) => {\r\n  return (\r\n    <div>\r\n      {props.todos.map((todo) => (\r\n        <TodoItem\r\n          key={todo.id}\r\n          todo={todo}\r\n          handleChangeProps={props.handleChangeProps}\r\n          deleteTodoProps={props.deleteTodoProps}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodosList;\r\n","// import React, { Component } from \"react\";\r\n\r\n// class Header extends Component {\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     var x = Math.floor(Math.random() * 256);\r\n//     var y = Math.floor(Math.random() * 256);\r\n//     var z = Math.floor(Math.random() * 256);\r\n//     var bgColor = \"rgb(\" + x + \",\" + y + \",\" + z + \")\";\r\n\r\n//     if (prevProps.headerSpan !== this.props.headerSpan) {\r\n//       document.getElementById(\"inH1\").innerHTML = \"clicked\";\r\n//       document.getElementById(\"inH1\").style.backgroundColor = bgColor;\r\n//     }\r\n//   }\r\n\r\n//   render() {\r\n//     const headerStyle = {\r\n//       padding: \"20px 0\",\r\n//       lineHeight: \"2em\",\r\n//     };\r\n//     return (\r\n//       <header style={headerStyle}>\r\n//         <h1 style={{ fontSize: \"25px\", marginBottom: \"15px\" }}>\r\n//           Simple Todo App <span id=\"inH1\"></span>\r\n//         </h1>\r\n//         <p style={{ fontSize: \"19px\" }}>\r\n//           Please add to-dos item(s) through the input field\r\n//         </p>\r\n//       </header>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Header;\r\n\r\nimport React, { useEffect, useRef } from \"react\";\r\n\r\nconst Header = (props) => {\r\n  const headerStyle = {\r\n    padding: \"20px 0\",\r\n    lineHeight: \"2em\",\r\n  };\r\n\r\n  const isInitialMount = useRef(true);\r\n\r\n  useEffect(() => {\r\n    var x = Math.floor(Math.random() * 256);\r\n    var y = Math.floor(Math.random() * 256);\r\n    var z = Math.floor(Math.random() * 256);\r\n    var bgColor = \"rgb(\" + x + \",\" + y + \",\" + z + \")\";\r\n\r\n    if (isInitialMount.current) {\r\n      isInitialMount.current = false;\r\n    } else {\r\n      document.getElementById(\"inH1\").innerHTML = \"clicked\";\r\n      document.getElementById(\"inH1\").style.backgroundColor = bgColor;\r\n    }\r\n  }, [props.headerSpan]);\r\n\r\n  return (\r\n    <header style={headerStyle}>\r\n      <h1 style={{ fontSize: \"25px\", marginBottom: \"15px\" }}>\r\n        Simple Todo App <span id=\"inH1\"></span>\r\n      </h1>\r\n      <p style={{ fontSize: \"19px\" }}>\r\n        Please add to-dos item(s) through the input field\r\n      </p>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// import React, { Component } from \"react\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst InputTodo = (props) => {\r\n  const [inputText, setInputText] = useState({\r\n    title: \"\",\r\n  });\r\n\r\n  const onChange = (e) => {\r\n    setInputText({\r\n      ...inputText,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.addTodoProps(inputText.title);\r\n    setInputText({\r\n      title: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"form-container\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"input-text\"\r\n        placeholder=\"Add todo...\"\r\n        value={inputText.title}\r\n        name=\"title\"\r\n        onChange={onChange}\r\n      />\r\n      <input type=\"submit\" className=\"input-submit\" value=\"Submit\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default InputTodo;\r\n\r\n// class InputTodo extends Component {\r\n//   state = {\r\n//     title: \"\",\r\n//   };\r\n\r\n//   onChange = (e) => {\r\n//     this.setState({\r\n//       [e.target.name]: e.target.value,\r\n//     });\r\n//   };\r\n\r\n//   handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     this.props.addTodoProps(this.state.title);\r\n//     this.setState({\r\n//       title: \"\",\r\n//     });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <form onSubmit={this.handleSubmit} className=\"form-container\">\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Add Todo...\"\r\n//           className=\"input-text\"\r\n//           value={this.state.title}\r\n//           name=\"title\"\r\n//           onChange={this.onChange}\r\n//         />\r\n//         <input type=\"submit\" className=\"input-submit\" value=\"Submit\" />\r\n//       </form>\r\n//     );\r\n//   }\r\n// }\r\n","// import React from \"react\";\r\n// import { v4 as uuidv4 } from \"uuid\";\r\n// import axios from \"axios\";\r\n\r\n// import Header from \"./Header\";\r\n// import TodosList from \"./TodosList\";\r\n// import InputTodo from \"./InputTodo\";\r\n\r\n// class TodoContainer extends React.Component {\r\n//   state = {\r\n//     // todos: [\r\n//     //   {\r\n//     //     id: uuidv4(),\r\n//     //     title: \"Setup development environment\",\r\n//     //     completed: true,\r\n//     //   },\r\n//     //   {\r\n//     //     id: uuidv4(),\r\n//     //     title: \"Develop website and add content\",\r\n//     //     completed: false,\r\n//     //   },\r\n//     //   {\r\n//     //     id: uuidv4(),\r\n//     //     title: \"Deploy to live server\",\r\n//     //     completed: false,\r\n//     //   },\r\n//     // ],\r\n\r\n//     todos: [],\r\n//     show: false,\r\n//   };\r\n\r\n//   handleChange = (id) => {\r\n//     this.setState({\r\n//       todos: this.state.todos.map((todo) => {\r\n//         if (todo.id === id) {\r\n//           todo.completed = !todo.completed;\r\n//         }\r\n\r\n//         return todo;\r\n//       }),\r\n//       show: !this.state.show,\r\n//     });\r\n//   };\r\n\r\n//   // delTodo = (id) => {\r\n//   //   this.setState({\r\n//   //     todos: [\r\n//   //       ...this.state.todos.filter((todo) => {\r\n//   //         return todo.id !== id;\r\n//   //       }),\r\n//   //     ],\r\n//   //   });\r\n//   // };\r\n\r\n//   delTodo = (id) => {\r\n//     axios\r\n//       .delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n//       .then((reponse) =>\r\n//         this.setState({\r\n//           todos: [\r\n//             ...this.state.todos.filter((todo) => {\r\n//               return todo.id !== id;\r\n//             }),\r\n//           ],\r\n//         })\r\n//       );\r\n//   };\r\n\r\n//   // addTodoItem = (title) => {\r\n//   //   const newTodo = {\r\n//   //     id: uuidv4(),\r\n//   //     title: title,\r\n//   //     completed: false,\r\n//   //   };\r\n\r\n//   //   this.setState({\r\n//   //     todos: [...this.state.todos, newTodo],\r\n//   //   });\r\n//   // };\r\n\r\n//   addTodoItem = (title) => {\r\n//     axios\r\n//       .post(\"https://jsonplaceholder.typicode.com/todos\", {\r\n//         title: title,\r\n//         completed: false,\r\n//       })\r\n//       .then((response) =>\r\n//         this.setState({\r\n//           todos: [...this.state.todos, response.data],\r\n//         })\r\n//       );\r\n//   };\r\n\r\n//   componentDidMount() {\r\n//     axios\r\n//       .get(\"https://jsonplaceholder.typicode.com/todos\", {\r\n//         params: {\r\n//           _limit: 10,\r\n//         },\r\n//       })\r\n//       .then((response) => this.setState({ todos: response.data }));\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       //   <div>\r\n//       //     <h1>Hello from Create React App</h1>\r\n//       //     <p>I am in a React Component!</p>\r\n//       //   </div>\r\n//       // <React.Fragment>\r\n//       // </React.Fragment>\r\n//       <div className=\"container\">\r\n//         <Header headerSpan={this.state.show} />\r\n//         <InputTodo addTodoProps={this.addTodoItem} />\r\n//         <TodosList\r\n//           todos={this.state.todos}\r\n//           handleChangeProps={this.handleChange}\r\n//           deleteTodoProps={this.delTodo}\r\n//         />\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n// export default TodoContainer;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport TodosList from \"./TodosList\";\r\nimport Header from \"./Header\";\r\nimport InputTodo from \"./InputTodo\";\r\n\r\nimport axios from \"axios\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst TodoContainer = (props) => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleChange = (id) => {\r\n    setTodos(\r\n      todos.map((todo) => {\r\n        if (todo.id === id) {\r\n          todo.completed = !todo.completed;\r\n        }\r\n        return todo;\r\n      })\r\n    );\r\n    setShow(!show);\r\n  };\r\n\r\n  const delTodo = (id) => {\r\n    setTodos([\r\n      ...todos.filter((todo) => {\r\n        return todo.id !== id;\r\n      }),\r\n    ]);\r\n  };\r\n\r\n  const addTodoItem = (title) => {\r\n    const newTodo = {\r\n      id: uuid(),\r\n      title: title,\r\n      completed: false,\r\n    };\r\n    setTodos([...todos, newTodo]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\r\n      .then((response) => setTodos(response.data));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Header headerSpan={show} />\r\n      <InputTodo addTodoProps={addTodoItem} />\r\n      <TodosList\r\n        todos={todos}\r\n        handleChangeProps={handleChange}\r\n        deleteTodoProps={delTodo}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoContainer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n//component file\r\nimport TodoContainer from \"./components/TodoContainer\";\r\nimport \"./App.css\";\r\n\r\nReactDOM.render(<TodoContainer />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}